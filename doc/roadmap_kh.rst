.. _roadmap:

.. |ss| raw:: html

   <strike>

.. |se| raw:: html

   </strike>

ផែនទីផ្លូវ
គោលបំណងនៃឯកសារនេះ។
ឯកសារនេះរាយបញ្ជីទិសដៅទូទៅដែលអ្នករួមចំណែកស្នូលចាប់អារម្មណ៍ចង់ឃើញត្រូវបានបង្កើតឡើងនៅក្នុង scikit-learn ។ ការពិតដែលថាធាតុមួយត្រូវបានរាយបញ្ជីនៅទីនេះគឺមិនមានវិធីណាមួយដែលសន្យាថាវានឹងកើតឡើងនោះទេ ដោយសារធនធានមានកំណត់។ ផ្ទុយទៅវិញ វាគឺជាការចង្អុលបង្ហាញថាជំនួយត្រូវបានស្វាគមន៍ចំពោះប្រធានបទនេះ។

សេចក្តីថ្លែងការណ៍នៃគោលបំណង៖ Scikit-learn ក្នុង 2018
ដប់មួយឆ្នាំបន្ទាប់ពីការចាប់ផ្តើមនៃ Scikit-learn មានការផ្លាស់ប្តូរជាច្រើននៅក្នុងពិភពនៃការរៀនម៉ាស៊ីន។ ការផ្លាស់ប្តូរសំខាន់ៗរួមមាន:

ឧបករណ៍គណនា៖ ការកេងប្រវ័ញ្ចនៃ GPU ក្របខ័ណ្ឌកម្មវិធីដែលបានចែកចាយដូចជា Scala/Spark ជាដើម។
បណ្ណាល័យ Python កម្រិតខ្ពស់សម្រាប់ការពិសោធន៍ ដំណើរការ និងការគ្រប់គ្រងទិន្នន័យ៖ Jupyter notebook, Cython, Pandas, Dask, Numba...
ការផ្លាស់ប្តូរនៅក្នុងការផ្តោតអារម្មណ៍នៃការស្រាវជ្រាវការរៀនម៉ាស៊ីន៖ កម្មវិធីបញ្ញាសិប្បនិមិត្ត (ដែលរចនាសម្ព័ន្ធបញ្ចូលគឺជាគន្លឹះ) ជាមួយនឹងការសិក្សាស៊ីជម្រៅ ការរៀនតំណាង ការរៀនពង្រឹង ការផ្ទេរដែន។ល។
ការផ្លាស់ប្តូរដ៏ស្រើបស្រាលជាងមួយទសវត្សរ៍ចុងក្រោយនេះគឺដោយសារតែការផ្លាស់ប្តូរចំណាប់អារម្មណ៍នៅក្នុង ML សិស្សថ្នាក់បណ្ឌិតក្នុងការរៀនម៉ាស៊ីនទំនងជារួមចំណែកដល់ PyTorch, Dask ជាដើម។ ជាង Scikit-learn ដូច្នេះក្រុមអ្នករួមចំណែករបស់យើងគឺខុសគ្នាខ្លាំងទៅនឹង ទសវត្សរ៍មុន។

Scikit-learn នៅតែមានប្រជាប្រិយភាពខ្លាំងក្នុងការអនុវត្តសម្រាប់ការសាកល្បងបច្ចេកទេសរៀនម៉ាស៊ីន Canonical ជាពិសេសសម្រាប់កម្មវិធីក្នុងវិទ្យាសាស្ត្រពិសោធន៍ និងវិទ្យាសាស្ត្រទិន្នន័យ។ អ្វី​ដែល​យើង​ផ្តល់​ឱ្យ​ជា​ច្រើន​ឥឡូវ​នេះ​មាន​ភាព​ចាស់​ទុំ​ណាស់។ ប៉ុន្តែវាអាចមានតម្លៃថ្លៃក្នុងការថែរក្សា ហើយយើងមិនអាចរួមបញ្ចូលការអនុវត្តថ្មីដោយបំពានបានទេ។ ប៉ុន្តែ Scikit-learn ក៏មានសារៈសំខាន់ផងដែរក្នុងការកំណត់ក្របខ័ណ្ឌ API សម្រាប់ការអភិវឌ្ឍន៍សមាសធាតុនៃការរៀនម៉ាស៊ីនដែលអាចអន្តរប្រតិបត្តិការបាននៅខាងក្រៅបណ្ណាល័យស្នូល។

ដូច្នេះគោលដៅចម្បងរបស់យើងក្នុងយុគសម័យនេះគឺ៖

បន្តរក្សាការប្រមូលឯកសារដែលមានគុណភាពខ្ពស់ និងឯកសារត្រឹមត្រូវសម្រាប់ដំណើរការទិន្នន័យ និងការរៀនម៉ាស៊ីនក្នុងវិសាលភាពបច្ចុប្បន្ន (ឧទាហរណ៍ ទិន្នន័យរាងចតុកោណភាគច្រើនមិនប្រែប្រួលទៅនឹងលំដាប់ជួរឈរ និងជួរ ការព្យាករណ៍គោលដៅជាមួយនឹងរចនាសម្ព័ន្ធសាមញ្ញ)
ធ្វើឱ្យប្រសើរឡើងនូវភាពងាយស្រួលសម្រាប់អ្នកប្រើប្រាស់ក្នុងការអភិវឌ្ឍន៍ និងបោះផ្សាយសមាសធាតុខាងក្រៅ
ធ្វើឱ្យប្រសើរឡើងនូវអន្តរប្រតិបត្តិការជាមួយឧបករណ៍វិទ្យាសាស្ត្រទិន្នន័យទំនើប (ឧ. Pandas, Dask) និងហេដ្ឋារចនាសម្ព័ន្ធ (ឧ. ដំណើរការចែកចាយ)
គោលដៅដែលមានលក្ខណៈល្អិតល្អន់ជាច្រើនអាចរកបាននៅក្រោមស្លាក API នៅលើកម្មវិធីតាមដានបញ្ហា។

គោលដៅស្ថាបត្យកម្ម / ទូទៅ
បញ្ជីនេះត្រូវបានដាក់លេខមិនមែនជាការបង្ហាញពីលំដាប់នៃអាទិភាពនោះទេ ប៉ុន្តែដើម្បីធ្វើឱ្យការសំដៅទៅលើចំណុចជាក់លាក់កាន់តែងាយស្រួល។ សូមបន្ថែមធាតុថ្មីតែនៅខាងក្រោមប៉ុណ្ណោះ។ ចំណាំថាធាតុដែលបានឆ្លងកាត់ត្រូវបានធ្វើរួចហើយ ហើយយើងព្យាយាមរក្សាឯកសារឱ្យទាន់សម័យនៅពេលយើងធ្វើការលើបញ្ហាទាំងនេះ។

ការកែលម្អការគ្រប់គ្រងរបស់ Pandas DataFrames
ការគ្រប់គ្រងឯកសារបច្ចុប្បន្ន
បញ្ហាលំដាប់ជួរឈរឡើងវិញ៖ បញ្ហា៖`7242`
ជៀសវាងការបំប្លែងដែលមិនចាំបាច់ទៅជា ndarray :issue:`12147`
ត្រឡប់ DataFrames ពី transformers :issue:`5523`
ទទួលបាន DataFrames ពីកម្មវិធីផ្ទុកទិន្នន័យ :issue:`10733` , :issue:`13902`
Sparse បច្ចុប្បន្ន​មិន​ត្រូវ​បាន​គេ​ចាត់​ទុក​ថា​:issue:`12800`
ធ្វើឱ្យប្រសើរឡើងនូវការគ្រប់គ្រងលក្ខណៈប្រភេទ
ម៉ូដែលដែលមានមូលដ្ឋានលើមែកធាងគួរតែអាចដោះស្រាយទាំងលក្ខណៈបន្ត និងប្រភេទ៖ បញ្ហា៖`12866` និង :បញ្ហា៖`15550` ។
នៅក្នុងកម្មវិធីផ្ទុកទិន្នន័យ៖ បញ្ហា៖`13902`
ក្នុងនាមជា transformers ទូទៅដែលត្រូវប្រើជាមួយ ColumnTransforms (ឧ. ការអ៊ិនកូដតាមលំដាប់ដែលគ្រប់គ្រងដោយការជាប់ទាក់ទងជាមួយអថេរគោលដៅ) :issue:`5853`, :issue:`11805`
ការដោះស្រាយល្បាយនៃអថេរប្រភេទ និងបន្ត
ធ្វើឱ្យប្រសើរឡើងនូវការគ្រប់គ្រងទិន្នន័យដែលបាត់
ការធ្វើឱ្យប្រាកដថាអ្នកប៉ាន់ស្មានមេតាមានភាពធូរស្រាលចំពោះទិន្នន័យដែលបាត់ :issue:`15319`
អ្នក​មិន​ប្រកាន់​រឿង​តូចតាច :issue:`11977`, :issue:`12852`
អ្នកសិក្សាកំពុងដោះស្រាយដោយផ្ទាល់នូវទិន្នន័យដែលបាត់ :issue:`13911`
ម៉ាស៊ីនបង្កើតគំរូកាត់ផ្តាច់ ដើម្បីធ្វើឱ្យផ្នែកខ្លះនៃសំណុំទិន្នន័យបាត់៖ បញ្ហា៖`6284`
ឯកសារ didactic បន្ថែមទៀត
ជម្រើសកាន់តែច្រើនត្រូវបានបន្ថែមទៅ scikit-learn ។ ជាលទ្ធផល ឯកសារមានចំនួនច្រើន ដែលធ្វើឲ្យអ្នកចាប់ផ្តើមដំបូងពិបាកយល់។ ការងារមួយចំនួនអាចត្រូវបានធ្វើក្នុងការកំណត់អាទិភាពនៃព័ត៌មាន។
ឆ្លងកាត់ព័ត៌មានដែលមិនមែន (X, y)៖ លក្ខណៈសម្បត្តិគំរូ
យើងត្រូវមានលទ្ធភាពបញ្ជូនទម្ងន់គំរូទៅកាន់អ្នកស៊ុតបាល់បញ្ចូលទីក្នុងការត្រួតពិនិត្យសុពលភាព។
យើងគួរតែមានវិធីស្ដង់ដារ / ទូទៅនៃការឆ្លងកាត់លក្ខណៈសម្បត្តិដែលមានប្រាជ្ញាជាគំរូនៅជុំវិញនៅក្នុងការប៉ាន់ស្មានមេតា។ :issue:`4497` :issue:`7646`
ឆ្លងកាត់ព័ត៌មានដែលមិនមែន (X, y)៖ លក្ខណៈសម្បត្តិមុខងារ
ឈ្មោះមុខងារ ឬការពណ៌នាគួរមានតាមឧត្ដមគតិដើម្បីឱ្យសមសម្រាប់ ឧ. . :issue:`6425` :issue:`6424`
ការដោះស្រាយតាមលក្ខណៈនីមួយៗ (ឧ. "តើនេះជាអត្ថបទជាភាសាអង់គ្លេស / សាមញ្ញ / ធម្មតាឬ?") ក៏មិនគួរត្រូវបានផ្តល់ជូនអ្នកបង្កើតការប៉ាន់ស្មានដែរ តាមឧត្ដមគតិ ប៉ុន្តែគួរតែមានជាទិន្នន័យមេតាជាមួយ X. :issue:`8480`
ឆ្លងកាត់ព័ត៌មានដែលមិនមែន (X, y): ព័ត៌មានគោលដៅ
យើងមានបញ្ហាក្នុងការទទួលបានសំណុំពេញលេញនៃថ្នាក់ទៅសមាសធាតុទាំងអស់នៅពេលដែលទិន្នន័យត្រូវបានបំបែក/យកគំរូ។ :issue:`6231`:issue:`8100`
យើងមិនមានវិធីដើម្បីដោះស្រាយល្បាយនៃគោលដៅប្រភេទ និងបន្តនោះទេ។
ធ្វើឱ្យវាកាន់តែងាយស្រួលសម្រាប់អ្នកប្រើប្រាស់ខាងក្រៅក្នុងការសរសេរសមាសធាតុ Scikit-learn-compatible
ការត្រួតពិនិត្យការប៉ាន់ប្រមាណដែលអាចបត់បែនបានបន្ថែមទៀតដែលមិនជ្រើសរើសតាមឈ្មោះអ្នកប៉ាន់ស្មាន :issue:`6599` :issue:`6715`
ឧទាហរណ៍​នៃ​របៀប​បង្កើត​ការ​ប៉ាន់​ស្មាន ឬ​មេតា​ប៉ាន់​ស្មាន :issue:`14582`
ការដំណើរការដោយខ្លួនឯងកាន់តែច្រើននៃ scikit-learn-contrib ឬធនធានស្រដៀងគ្នា
គាំទ្រការយកគំរូឡើងវិញ និងការកាត់បន្ថយគំរូ
អនុញ្ញាតឱ្យមានគំរូរងនៃថ្នាក់ភាគច្រើន (នៅក្នុងបំពង់មួយ?) :issue:`3855`
អនុវត្តព្រៃឈើដោយចៃដន្យជាមួយនឹងការធ្វើគំរូឡើងវិញ៖ បញ្ហា៖`១៣២២៧`
ចំណុចប្រទាក់កាន់តែប្រសើរឡើងសម្រាប់ការអភិវឌ្ឍន៍អន្តរកម្ម
__repr__ និងការមើលឃើញ HTML នៃអ្នកប៉ាន់ស្មាន :issue:`6323` និង :pr:`14180` ។
រួមបញ្ចូលឧបករណ៍គូសវាស មិនមែនគ្រាន់តែជាឧទាហរណ៍ប៉ុណ្ណោះទេ។ :issue:`9173`
ឧបករណ៍ដែលបានកែលម្អសម្រាប់ការវិនិច្ឆ័យគំរូ និងការសន្និដ្ឋានជាមូលដ្ឋាន
ការអនុវត្តសារៈសំខាន់មុខងារជំនួស :បញ្ហា៖`13146`
វិធីល្អប្រសើរជាងមុនដើម្បីដោះស្រាយសំណុំសុពលភាពនៅពេលសម
វិធីល្អប្រសើរជាងមុនដើម្បីស្វែងរកកម្រិត / បង្កើតច្បាប់នៃការសម្រេចចិត្ត :issue:`8614`
ឧបករណ៍ល្អប្រសើរជាងមុនសម្រាប់ការជ្រើសរើស hyperparameters ជាមួយនឹងការប៉ាន់ស្មាន transductive
ការស្វែងរកក្រឡាចត្រង្គ និងសុពលភាពឆ្លងមិនអាចអនុវត្តបានចំពោះកិច្ចការជាក្រុមភាគច្រើនទេ។ ការជ្រើសរើសដោយផ្អែកលើស្ថេរភាពគឺពាក់ព័ន្ធជាង។
ការគាំទ្រកាន់តែប្រសើរឡើងសម្រាប់ការសាងសង់បំពង់ដោយដៃ និងស្វ័យប្រវត្តិ
មធ្យោបាយងាយស្រួលជាងក្នុងការសាងសង់បំពង់ស្មុគស្មាញ និងកន្លែងស្វែងរកត្រឹមត្រូវ :issue:`7608` :issue:`5082` :issue:`8243`
ផ្តល់ជួរស្វែងរកសម្រាប់អ្នកប៉ាន់ស្មានទូទៅ ??
cf. ក្រឡាចត្រង្គស្វែងរក
ការ​តាមដាន​ភាព​ប្រសើរ​ឡើង​
Verbose មិនមានភាពរួសរាយរាក់ទាក់ទេ ហើយគួរប្រើបណ្ណាល័យកត់ត្រាស្តង់ដារ :issue:`6929`, :issue:`78`
ការហៅត្រលប់មកវិញ ឬប្រព័ន្ធស្រដៀងគ្នានឹងជួយសម្រួលដល់ការកត់ត្រា និងការបញ្ឈប់ទាន់ពេលវេលា
ការចែកចាយភាពស្របគ្នា។
ទទួលយកទិន្នន័យដែលអនុលោមតាម __array_function__
ផ្លូវឆ្ពោះទៅមុខសម្រាប់ច្រើនទៀតចេញពីស្នូល
Dask អនុញ្ញាត​ឱ្យ​មាន​ការ​គណនា​ក្រៅ​ស្នូល​យ៉ាង​ងាយ​ស្រួល។ ខណៈពេលដែលគំរូ Dask ប្រហែលជាមិនអាចសម្របបានទៅនឹងក្បួនដោះស្រាយការរៀនម៉ាស៊ីនទាំងអស់ ការសិក្សារបស់ម៉ាស៊ីនភាគច្រើនគឺនៅលើទិន្នន័យតូចជាង ETL ដូច្នេះហើយយើងអាចសម្របខ្លួនទៅនឹងខ្នាតធំបានខណៈពេលដែលគាំទ្រតែប្រភាគនៃគំរូប៉ុណ្ណោះ។
ការគាំទ្រសម្រាប់ការធ្វើការជាមួយម៉ូដែលមុនការបណ្តុះបណ្តាល
អ្នកប៉ាន់ស្មាន "ត្រជាក់" ។ ជាពិសេស ឥឡូវនេះ វាមិនអាចទៅរួចទេក្នុងការក្លូន CalibratedClassifierCV ជាមួយនឹងបុព្វបទ។ :issue:`8370`។ :issue:`6451`
ថយក្រោយ-ឆបគ្នា de/serialization នៃអ្នកប៉ាន់ស្មានមួយចំនួន
បច្ចុប្បន្ន សៀរៀល (ជាមួយការរើស) បំបែកតាមកំណែនានា ខណៈពេលដែលយើងប្រហែលជាមិនអាចទទួលបានជុំវិញការកំណត់ផ្សេងទៀតនៃសុវត្ថិភាព pickle re ជាដើម។ វាជាការប្រសើរណាស់ក្នុងការផ្តល់ជូននូវសុវត្ថិភាពឆ្លងជំនាន់ពីកំណែ 1.0 ។ ចំណាំ៖ Gael និង Olivier គិតថានេះអាចបណ្តាលឱ្យមានបន្ទុកថែទាំធ្ងន់ ហើយយើងគួរតែគ្រប់គ្រងការដោះដូរ។ ជម្រើសដែលអាចកើតមានត្រូវបានបង្ហាញនៅក្នុងចំណុចខាងក្រោម។
ឯកសារ និងឧបករណ៍សម្រាប់ការគ្រប់គ្រងវដ្តជីវិតគំរូ
រៀបចំឯកសារអំពីការអនុវត្តល្អសម្រាប់ការដាក់ពង្រាយគំរូ និងវដ្តជីវិត៖ មុននឹងដាក់ពង្រាយគំរូ៖ ថតរូបកំណែកូដ (numpy, scipy, scikit-learn, custom code repo) ស្គ្រីបបណ្តុះបណ្តាល និងឈ្មោះហៅក្រៅអំពីរបៀបទាញយកទិន្នន័យបណ្ដុះបណ្ដាលប្រវត្តិសាស្ត្រ + ថតចម្លងច្បាប់ចម្លងនៃ សំណុំសុពលភាពតូចមួយ + រូបថតនៃការទស្សន៍ទាយ (ប្រូបាប៊ីលីតេដែលបានព្យាករណ៍សម្រាប់អ្នកចាត់ថ្នាក់) នៅលើសំណុំសុពលភាពនោះ។
ឯកសារ និងឧបករណ៍ដើម្បីធ្វើឱ្យវាងាយស្រួលក្នុងការគ្រប់គ្រងការអាប់ដេតកំណែ scikit-learn៖
ព្យាយាមផ្ទុកឧបករណ៍រើសចាស់ ប្រសិនបើវាដំណើរការ ប្រើរូបថតទស្សន៍ទាយសំណុំសុពលភាព ដើម្បីរកមើលថាគំរូសៀរៀលនៅតែមានលក្ខណៈដដែល។
ប្រសិនបើ joblib.load / pickle.load មិនដំណើរការទេ សូមប្រើស្គ្រីបបណ្តុះបណ្តាលការគ្រប់គ្រងកំណែ + សំណុំបណ្ដុះបណ្ដាលប្រវត្តិសាស្ត្រ ដើម្បីបង្ហាត់គំរូឡើងវិញ ហើយប្រើរូបថតទស្សន៍ទាយសំណុំសុពលភាព ដើម្បីអះអាងថា វាអាចទៅរួចក្នុងការស្ដារឡើងវិញនូវការអនុវត្តការព្យាករណ៍ពីមុន៖ ប្រសិនបើនេះមិនមែនជា ករណីប្រហែលជាមានកំហុសនៅក្នុង scikit-learn ដែលត្រូវការរាយការណ៍។
អ្វីគ្រប់យ៉ាងនៅក្នុង Scikit-learn គួរតែអនុលោមតាមកិច្ចសន្យា API របស់យើង។ យើងនៅតែស្ថិតក្នុងដំណើរការធ្វើការសម្រេចចិត្តលើបញ្ហាពាក់ព័ន្ធមួយចំនួននេះ។
Pipeline <pipeline.Pipeline> និង FeatureUnion កែប្រែប៉ារ៉ាម៉ែត្របញ្ចូលរបស់ពួកគេឱ្យសម។ ការជួសជុលវាទាមទារឱ្យប្រាកដថាយើងយល់បានល្អអំពីករណីប្រើប្រាស់របស់ពួកគេ ដើម្បីប្រាកដថាមុខងារបច្ចុប្បន្នទាំងអស់ត្រូវបានរក្សា។ :issue:`8157` :issue:`7382`
(ជាជម្រើស) ធ្វើអោយប្រសើរឡើងនូវឈុតតេស្តទូទៅ scikit-learn ដើម្បីធ្វើឱ្យប្រាកដថា (យ៉ាងហោចណាស់សម្រាប់ម៉ូដែលដែលប្រើញឹកញាប់) មានការព្យាករណ៍មានស្ថេរភាពនៅទូទាំងកំណែ (ដែលត្រូវពិភាក្សា);
ពង្រីកឯកសារដើម្បីនិយាយអំពីរបៀបដាក់ពង្រាយម៉ូដែលនៅក្នុងបរិស្ថានដែលគ្មាន Python ឧទាហរណ៍ ONNX ។ ហើយប្រើការអនុវត្តល្អបំផុតខាងលើដើម្បីវាយតម្លៃភាពស៊ីសង្វាក់នៃការទស្សន៍ទាយរវាងមុខងារទស្សន៍ទាយ scikit-learn និង ONNX នៅលើសំណុំសុពលភាព។
ចងក្រងឯកសារការអនុវត្តល្អ ដើម្បីរកមើលការរសាត់នៃការបែងចែកបណ្ដោះអាសន្នសម្រាប់គំរូដែលបានដាក់ពង្រាយ និងការអនុវត្តល្អសម្រាប់ការបណ្តុះបណ្តាលឡើងវិញលើទិន្នន័យថ្មី ដោយមិនបង្កឱ្យមានការថយក្រោយនៃដំណើរការព្យាករណ៍មហន្តរាយ។


គោលដៅជាក់លាក់នៃកញ្ចប់រង
:mod:`sklearn.ensemble`

ការអនុវត្តការដាក់ជង់ :issue:`11047`
:mod:`sklearn.cluster`

វ៉ារ្យ៉ង់ kmeans សម្រាប់ចម្ងាយដែលមិនមែនជា Euclidean ប្រសិនបើយើងអាចបង្ហាញថាវាមានអត្ថប្រយោជន៍លើសពីការចង្កោមតាមឋានានុក្រម។
:mod:`sklearn.model_selection`

ការដាក់ពិន្ទុច្រើនម៉ែត្រគឺយឺត :issue:`9326`
ប្រហែលជាយើងចង់ទទួលបានមកវិញច្រើនជាងម៉ែត្រច្រើន។
ការដោះស្រាយស្ថានភាពចៃដន្យនៅក្នុង CV splitters គឺជាការរចនាមិនល្អ និងផ្ទុយពីសុពលភាពនៃប៉ារ៉ាម៉ែត្រស្រដៀងគ្នានៅក្នុងអ្នកប៉ាន់ស្មាន SLEP011
ប្រើក្បួនដោះស្រាយការចាប់ផ្តើមក្តៅ និងផ្លូវ ដូច្នេះអត្ថប្រយោជន៍នៃវត្ថុ EstimatorCV អាចចូលប្រើបានតាមរយៈ GridSearchCV និងប្រើក្នុង Pipelines។ :issue:`1626`
សុពលភាពឆ្លងគួរតែអាចជំនួសដោយការប៉ាន់ប្រមាណរបស់ OOB នៅពេលណាដែលឧបករណ៍កំណត់សុពលភាពឆ្លងត្រូវបានប្រើ។
ការគណនាដែលលើសលប់នៅក្នុងបំពង់គួរតែត្រូវបានជៀសវាង (ទាក់ទងទៅនឹងចំណុចខាងលើ) cf dask-ml
:mod:`sklearn.neighbors`

សមត្ថភាពក្នុងការជំនួសការអនុវត្តអ្នកជិតខាងដែលនៅជិតបំផុតផ្ទាល់ខ្លួន / ប្រហាក់ប្រហែល / គណនាជាមុនសម្រាប់របស់យើងនៅក្នុងបរិបទទាំងអស់ / ភាគច្រើនដែលអ្នកជិតខាងដែលនៅជិតបំផុតត្រូវបានប្រើសម្រាប់ការរៀន។ :issue:`10463`
:mod:`sklearn.pipeline`

បញ្ហាដំណើរការជាមួយ Pipeline.memory
សូមមើល "អ្វីគ្រប់យ៉ាងនៅក្នុង Scikit-learn គួរតែអនុលោមតាមកិច្ចសន្យា API របស់យើង" ខាងលើ